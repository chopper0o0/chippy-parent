description '后端项目模板父工程'

//构建Gradle脚本自身需要的资源，可以声明的资源包括依赖项、第三方插件、maven仓库地址等。
buildscript {
    ext {
        springBootVersion = '2.2.1.RELEASE'
    }

    //设置仓库
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://repo.spring.io/milestone' }
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

//配置全局, 包括root项目和子项目
allprojects {
    group 'com.chippy'
    version '1.0.0-SNAPSHOT'

    //配置编码格式
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    //设置仓库
    repositories {
        maven { url 'https://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://repo.spring.io/milestone' }
        mavenCentral()
    }

}

apply from: 'version.gradle'

//配置所有子项目
subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library' //api
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8


    //公用的依赖
    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    test {
        enabled(false)
        useJUnitPlatform()
    }

    // dependencyManagement版本统一管理，类似于父maven的dependencyManagement
    dependencyManagement {
        dependencies {
            for (depJar in rootProject.ext.dependencies) {
                dependency depJar.value
            }
        }
        imports {
        }
    }
}


project(':chipppy-manager') {
    description("通用处理层")

    dependencies {
        api project(':chippy-dao')
        api project(':chippy-repo')
    }
}

project(":chippy-common") {
    description("公共模块:存放常用的工具类")
    //依赖
    dependencies {

    }
}

project(":chippy-dao") {
    description("数据持久层")

    dependencies {
        api project(':chippy-common')
    }
}

project(":chippy-repo") {
    description("外部交互层")

    dependencies {
        implementation project(':chippy-common')
    }

}

project(":chippy-service") {
    description("业务逻辑层")

    dependencies {
        api project(':chipppy-manager')

    }
}

project(":chippy-web") {
    description("请求处理层")
}


